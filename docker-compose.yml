version: '3.8'

services:
    backend:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: always
        working_dir: /var/www
        volumes:
            - .:/var/www
        ports:
            - "8080:8000"
        depends_on:
            - redis
        environment:
            - APP_ENV=production
            - APP_DEBUG=true
            - APP_KEY=
            - REDIS_HOST=redis
            - REDIS_PORT=6379

    frontend:
        build: ./frontend
        container_name: react_app
        restart: unless-stopped
        ports:
            - "3000:3000"
        volumes:
            - ./frontend:/app
            - /app/node_modules
        environment:
            - NODE_ENV=production

    python_executor:
        build: ./workers
        container_name: python_executor
        restart: always
        depends_on:
            - redis
        environment:
            - APP_ENV=production

    redis:
        image: redis:latest
        container_name: redis_db
        restart: always
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data

volumes:
    redis_data:


#services:
#    backend:
#        build: .
#        container_name: laravel_app
#        restart: unless-stopped
#        volumes:
#            - .:/var/www
#        depends_on:
#            - redis
#        environment:
#            - APP_ENV=production
#            - DB_CONNECTION=redis
#        ports:
#            - "8000:9000"
#        networks:
#            - app_network
#
#    frontend:
#        build: ./frontend
#        container_name: react_app
#        restart: unless-stopped
#        ports:
#            - "3000:3000"
#        networks:
#            - app_network
#
#    python_executor:
#        build: ./workers
#        container_name: python_executor
#        restart: unless-stopped
#        depends_on:
#            - redis
#        networks:
#            - app_network
#
#    redis:
#        image: redis:latest
#        container_name: redis_db
#        restart: unless-stopped
#        ports:
#            - "6379:6379"
#        networks:
#            - app_network
#
#networks:
#    app_network:
#        driver: bridge
